# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp
	call main
	halt

# Source block
	.align 8
src:	
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block 
	ret

# long copy_block(long *src, long * dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
	irmovq $0, %rcx
loop:
	andq %rdx, %rdx			# Is len = 0?
	jle end	
	mrmovq (%rdi), %rax
	rmmovq %rax, (%rsi)
	xorq %rax, %rcx
	irmovq $1, %r8
	subq %r8, %rdx
	irmovq $8, %r10
	addq %r10, %rdi
	addq %r10, %rsi
	jmp loop
end:
	rrmovq %rcx, %rax
	ret

# Stack starts here and grows to lower addresses.
	.pos 0x200
stack:
